#logging
# file|stdout|syslog
logtarget = stdout

# the path to logfile to write into when logtarget is 'file'
logfile = /tmp/mqrestt.log

# log facility to use to use when 'syslog' is used
logfacility = local1

#debug|info|warning|error|fatal
loglevel = debug


# URL and port for the MQTT broker
# for all of the units, we connect to the same broker
# but subscribing to different topic, specified 
# in the topic config sections
mqtt_broker_host = localhost
mqtt_broker_port = 1883
mqtt_keepalive = 50


# TLS
mqtt_tls = false
# the rest used only if mqtt_tls is true
mqtt_cafile =   sandbox/tls/ca.crt
#mqtt_capath = sandbox/tls/
mqtt_certfile = sandbox/tls/client.crt
mqtt_keyfile =  sandbox/tls/client.key


# USER/PW auth
mqtt_user_pw = true
mqtt_user = monited
mqtt_pw = znUM2bn34jPH8Nr8

unit product1 {
 webservice_baseurl = http://localhost:8000/api/v1/device/
# the topic to subscribe on MQTT
# the subscription will be extended as
# <mqtt_topic>/#
# so enough just the name of the top level topic we want to listen
# this will be chopped from the start of the full topic name
# and the rest will be added to the webservice_baseurl for calling the REST api
 mqtt_topic = unit1
 enabled = false
}
unit product2 {
 webservice_baseurl = http://localhost:9000/
# the topic to subscribe on MQTT
# the subscription will be extended as
# <mqtt_topic>/#
# so enough just the name of the top level topic we want to listen
# this will be chopped from the start of the full topic name
# and the rest will be added to the webservice_baseurl for calling the REST api
 mqtt_topic = unit2
 enabled = false
}

rest2mqtt_unit productA {
 listen_port = 9000
 mqtt_topic_root = /productA/
 enabled = true
}
